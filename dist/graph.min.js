function show_notification(e){document.getElementById("notifications-div").innerText=e}function uuidv4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}function show_loading(){$(".page-loading").show()}function hide_loading(){$(".page-loading").hide()}function get_heading_fields(e){if(0===e.length)return[];let t=e[0];return Object.keys(t)}Array.prototype.extend=function(e){e.forEach((function(e){this.push(e)}),this)};class VertexUtils{constructor(e,t){this.canvas=e,this.color_schema=t}add(e,t){let n=this,i=this.canvas.selectAll(".node").data(e).enter().append("g").attr("class","node").attr("id",(function(e){return"node-"+e.id}));return i.append("circle").attr("r",20).style("fill",(function(e,t){return n.color_schema(e.label)})).style("cursor","pointer").on("mouseover",(function(e){t.onNodeHoverIn(e)})).on("mouseout",(function(e){t.onNodeHoverOut(e)})).on("click",(function(e){t.onNodeClicked(this,e)})),i.append("title").text((function(e){return e.id})),i.append("text").attr("dy",-3).text((function(e){return e.name})),i}remove(e){}}class EdgeUtils{constructor(e,t){this.canvas=e,this.color_schema=t}add(e,t){let n=this.canvas.selectAll(".link").data(e).enter().append("line").attr("class","link").attr("marker-end","url(#arrowhead)").on("mouseover",(function(e){t.onLinkMoveHover(e)})).on("mouseout",(function(e){t.onLinkMoveOut(e)})).attr("id",(function(e,t){return"link-"+e.id})).style("stroke-width",2).style("stroke","#999");n.append("title").text((function(e){return e.label}));let i=this.canvas.selectAll(".edgepath").data(e).enter().append("path").attrs({class:"edgepath","fill-opacity":0,"stroke-opacity":0,id:function(e,t){return"edgepath-"+e.id},fill:"#999"}).style("pointer-events","none"),r=this.canvas.selectAll(".edgelabel").data(e).enter().append("text").style("pointer-events","none").attr("dy",-3).attrs({class:"edgelabel",id:function(e,t){return"edgelabel-"+e.id},"font-size":12,fill:"#999"});return r.append("textPath").attr("xlink:href",(function(e,t){return"#edgepath-"+e.id})).style("text-anchor","middle").style("background","#ffffff").style("pointer-events","none").attr("startOffset","50%").text((function(e){return e.label})),[n,i,r]}remove(e){}}class GraphControls{hideVertexLabels(){$("g.node text").hide()}showVertexLabels(){$("g.node text").show()}hideEdgeLabels(){$(".edgelabel").hide()}showEdgeLabels(){$(".edgelabel").show()}center(e){let t=e.canvas;var n=t.node().getBBox(),i=t.node().parentElement,r=i.clientWidth||i.parentNode.clientWidth,s=i.clientHeight||i.parentNode.clientHeight,o=n.width,a=n.height,l=n.x+o/2,d=n.y+a/2;if(0===o||0===a)return;var c=.85/Math.max(o/r,a/s),h=[r/2-c*l,s/2-c*d];var u=d3.zoomIdentity.translate(h[0],h[1]).scale(c);e.transition().duration(100).call(zoom.transform,u)}}class DataGraphCanvas{constructor(e,t){this.html_selector_id=e,this.graph_ui=t,this.color_schema=d3.scaleOrdinal(d3.schemeCategory10),this.vertices_list=[],this.edges_list=[],this.properties_canvas=d3.select("#properties-div"),this.legend_canvas=d3.select("#legend-div svg"),this.canvas=this.setup_canvas(e),this.edge_utils=new EdgeUtils(this.canvas,this.color_schema),this.vertex_utils=new VertexUtils(this.canvas,this.color_schema);let n=document.querySelector(e).getBoundingClientRect();this.canvas_width=n.width,this.canvas_height=n.height,this.simulation=this.setup_simulation(),this.controls=new GraphControls,this.NODE_ID_TO_LINK_IDS={},this.LINK_ID_TO_LINK={},this.remove_everything()}setup_canvas(e){let t=d3.select(e).call(d3.zoom().on("zoom",(function(){t.attr("transform",d3.event.transform)}))).on("dblclick.zoom",null).append("g").attr("class","everything");return t.select("*:not(circle), *:not(line), *:not(path), *:not(text), *:not(link)").on("click",(function(){d3.select(".node-menu").remove()})),t}remove_everything(){this.legend_canvas.selectAll("*").remove(),d3.select(".everything").selectAll("*").remove(),this.canvas.selectAll("*").remove()}reset_canvas_data(){this.vertices_list=[],this.edges_list=[]}clear_canvas(){this.remove_everything(),this.canvas.append("defs").append("marker").attrs({id:"arrowhead",viewBox:"-0 -5 10 10",refX:23,refY:0,orient:"auto",markerWidth:7,markerHeight:7,xoverflow:"visible"}).append("svg:path").attr("d","M 0,-5 L 10 ,0 L 0,5").attr("fill","#666").style("stroke","none")}setup_simulation(){let e=d3.forceCollide().radius((function(e){return e.radius+1.2})).iterations(1);const t=d3.forceX(this.canvas_width/2).strength(.04),n=d3.forceY(this.canvas_height/2).strength(.04);return d3.forceSimulation().force("link",d3.forceLink().id((function(e){return e.id})).distance(150).strength(1)).force("charge",this.getSimulationCharge()).force("collide",e).force("x",t).force("y",n).force("center",d3.forceCenter(this.canvas_width/2,this.canvas_height/2)).velocityDecay(.4).alphaTarget(.1)}getSimulationCharge(){return d3.forceManyBody().strength(-1e3)}getAdjacentNodeIds(e){let t=this,n=this.NODE_ID_TO_LINK_IDS[e]||new Set,i=new Set([e]);return n.forEach(e=>{let n=t.getLink(e);i.add(n.source.id),i.add(n.target.id)}),i}getLink(e){return this.LINK_ID_TO_LINK[e]}get_LINK_ID_TO_LINK(e){let t={};return e.forEach(e=>{t[e.id]=e}),t}get_NODE_ID_TO_LINK_IDS(e){let t={};return e.forEach(e=>{t[e.source.id]=t[e.source.id]||new Set,t[e.target.id]=t[e.target.id]||new Set,t[e.source.id].add(e.id),t[e.target.id].add(e.id)}),t}getAdjacentLinkIds(e){return this.NODE_ID_TO_LINK_IDS[e]||new Set}expandInLinksAndNodes(e){let t="node=g.V("+e.id+").toList(); edges = g.V("+e.id+").outE().dedup().toList(); other_nodes = g.V("+e.id+").outE().otherV().dedup().toList();[other_nodes,edges,node]";return this.graph_ui.submitQuery(t,!1,!1),!1}expandOutLinksAndNodes(e){let t="node=g.V("+e.id+").toList(); edges = g.V("+e.id+").inE().dedup().toList(); other_nodes = g.V("+e.id+").inE().otherV().dedup().toList();[other_nodes,edges,node]";return this.graph_ui.submitQuery(t,!1,!1),!1}closeNodeMenu(e){d3.select(".node-menu").remove()}releaseNodeLock(e){e.fixed=!1,e.fx=null,e.fy=null,this.simulation.alpha(.3).restart()}onNodeClicked(e,t){let n=this,i=d3.select("#node-"+t.id);d3.select(".node-menu").remove();var r=[{id:101,option_name:"not-assigned",title:"not assigned",html:"."},{id:102,option_name:"out-links",title:"out links",html:"&rarr;"},{id:103,option_name:"not-assigned",title:"not assigned",html:"."},{id:104,option_name:"close-node-menu",title:"Close Menu",html:"&#x2715;"},{id:105,option_name:"in-links",title:"in links",html:"&rarr;"},{id:106,option_name:"release-lock",title:"Release Lock",html:"&#x1f513;"}],s=d3.pie().sort(null).value((function(e){return Object.keys(r).length})),o=Math.min(180,180)/2,a=d3.arc().innerRadius(o-70).outerRadius(o-35),l=i.append("svg").attr("width",180).attr("height",180).attr("class","node-menu").attr("x",-90).attr("y",-90).append("g").attr("transform","translate(90,90)").selectAll(".arc").data(s(r)).enter().append("g").attr("class","arc").attr("title",(function(e){return e.title})).on("click",(function(e){"out-links"===e.data.option_name?n.expandOutLinksAndNodes(t):"in-links"===e.data.option_name?n.expandInLinksAndNodes(t):"close-node-menu"===e.data.option_name?n.closeNodeMenu(t):"release-lock"===e.data.option_name?n.releaseNodeLock(t):alert("not implemented")})),d=l.append("path").attr("d",a).attr("fill",(function(e){return"#333333"}));l.append("text").attr("transform",(function(e){return"translate("+a.centroid(e)+")"})).attr("dy",".35em").style("text-anchor","middle").html((function(e){return e.data.html})).attr("title",(function(e){return e.data.title})).attr("stroke","#ffffff");l.append("title").text((function(e){return e.data.title})),d.on("mouseenter",(function(e,t){d3.select(this).attr("fill","#555555").attr("cursor","pointer").attr("class","on")})),d.on("mouseout",(function(e){d3.select(this).attr("fill",(function(e){return"#333333"})).attr("class","off")}))}onNodeHoverOut(e){this.resetNodeHighlight(e),this.hideProperties()}showProperties(e){let t=Object.assign({},e);delete t.x,delete t.y,delete t.vy,delete t.vx,delete t.fx,delete t.fy,delete t.index,delete t.source,delete t.target,delete t.outV,delete t.inV,delete t.inVLabel,delete t.OutVLabel,document.getElementById("properties-div").style.display="block",document.getElementById("properties-div").innerHTML=JSON.stringify(t,null,2)}hideProperties(){document.getElementById("properties-div").style.display="none",document.getElementById("properties-div").innerHTML=""}onLinkMoveHover(e){let t=this.canvas.selectAll(".node");this.canvas.selectAll(".link").style("opacity",(function(t){return e.id===t.id?"1":"0.1"}));let n=this.LINK_ID_TO_LINK[e.id],i=new Set([n.source.id,n.target.id]);t.style("opacity",(function(e){return i.has(e.id)?"1":"0.1"})),d3.select("#link-"+e.id).style("stroke","black"),this.showProperties(e)}onLinkMoveOut(e){let t=this.canvas.selectAll(".node"),n=this.canvas.selectAll(".link");t.style("opacity","1"),n.style("opacity","1"),d3.select("#link-"+e.id).style("stroke","#666"),this.hideProperties()}resetNodeHighlight(e){let t=this.canvas.selectAll(".node"),n=this.canvas.selectAll(".link"),i=this.canvas.selectAll(".edgelabel");t.style("opacity","1"),n.style("opacity","1"),i.style("opacity","1")}highlightHoveredNodesAndEdges(e){let t=this.canvas.selectAll(".node"),n=this.canvas.selectAll(".link"),i=this.canvas.selectAll(".edgelabel"),r=this.getAdjacentNodeIds(e.id);t.style("opacity",(function(e){return r.has(e.id)?"1":"0.1"}));let s=this.getAdjacentLinkIds(e.id);n.style("opacity",(function(e){return s.has(e.id)?"1":"0.1"})),i.style("opacity",(function(e){return s.has(e.id)?"1":"0.1"}))}onNodeHoverIn(e){this.highlightHoveredNodesAndEdges(e),this.showProperties(e)}add_vertices(e){return this.add_vertex_legend(e),this.vertex_utils.add(e,this)}add_edges(e){return this.add_edge_legend(e),this.edge_utils.add(e,this)}add_vertex_legend(e){let t=this,n=document.querySelector(".edges-legend").getBoundingClientRect().height,i=this.legend_canvas.append("g").attr("class","vertices-legend exclude-from-zoom").attr("height",0).attr("width",0).attr("transform","translate(10,"+(n+35)+")"),r=[];e.forEach((function(e){-1===r.indexOf(e.label)&&r.push(e.label)})),i.selectAll(".legend-circle").data(r).enter().append("circle").attr("class","legend-circle").attr("transform",(function(e,t){return"translate(20,"+(20*t+10)+")"})).attr("r",10).style("fill",(function(e,n){return t.color_schema(e)})),i.selectAll(".label").data(r).enter().append("text").attr("x","40").attr("y",(function(e,t){return 20*t+15})).text((function(e){return e}))}add_edge_legend(e){let t=this,n=this.legend_canvas.append("g").attr("class","edges-legend  exclude-from-zoom").attr("height",0).attr("width",0).attr("transform","translate(10,30)"),i=[];e.forEach((function(e){-1===i.indexOf(e.label)&&i.push(e.label)})),n.selectAll(".legend-rect").data(i).enter().append("rect").attrs({width:10,height:4}).attr("class","legend-rect").attr("transform",(function(e,t){return"translate(15,"+(20*t+10)+")"})).style("fill",(function(e,n){return t.color_schema(e)})),n.selectAll(".label").data(i).enter().append("text").attr("x","40").attr("y",(function(e,t){return 20*t+15})).style("fill",(function(e,n){return t.color_schema(e)})).text((function(e){return e}))}check_is_node_already_exist(e,t){var n=!1;return t.forEach((function(t){if(t.id===e.id)return n=!0})),n}check_is_edge_already_exist(e,t){var n=!1;return t.forEach((function(t){if(t.id===e.id)return n=!0})),n}draw(e,t){let n=this;var i=this.vertices_list,r=this.edges_list;t.forEach((function(e){n.check_is_edge_already_exist(e,r)||r.push(e)})),e.forEach((function(e){n.check_is_node_already_exist(e,i)||i.push(e)})),this.vertices_list=i,this.edges_list=r,this.render_graph(i,r)}render_graph(e,t){let n=this;this.clear_canvas();let i=this.add_edges(t),r=i[0],s=i[1],o=i[2],a=this.add_vertices(e);a.on("dblclick",(function(e){e.fixed=!1,d3.event.active||n.simulation.alphaTarget(.3).restart()})).call(d3.drag().on("start",(function(e){d3.event.active||n.simulation.alphaTarget(.3).restart();e.fx=e.x,e.fy=e.y})).on("drag",(function(e){e.fx=d3.event.x,e.fy=d3.event.y})).on("end",(function(e){d3.event.active||n.simulation.alphaTarget(0);n.simulation.alpha(.3).restart()}))),d3.select("#center-canvas").on("click",(function(){n.controls.center(n)})),this.simulation.nodes(e).on("tick",(function(){r.attr("x1",(function(e){return e.source.x})).attr("y1",(function(e){return e.source.y})).attr("x2",(function(e){return e.target.x})).attr("y2",(function(e){return e.target.y})),a.attr("transform",(function(e){return"translate("+e.x+", "+e.y+")"})),s.attr("d",(function(e){return"M "+e.source.x+" "+e.source.y+" L "+e.target.x+" "+e.target.y})),o.attr("transform",(function(e){if(e.target.x<e.source.x){let e=this.getBBox();return"rotate(180 "+(e.x+e.width/2)+" "+(e.y+e.height/2)+")"}return"rotate(0)"}))})),this.simulation.force("link").links(t),this.NODE_ID_TO_LINK_IDS=this.get_NODE_ID_TO_LINK_IDS(t),this.LINK_ID_TO_LINK=this.get_LINK_ID_TO_LINK(t)}}class GremlinResponseSerializers{convert_vertex_property_to_json(e){let t=e[0];if("g:VertexProperty"!==t["@type"])throw"Not a VertexProperty error. check if this is of g:VertexProperty type:: "+JSON.stringify(e);let n={},i=t["@value"].value;return n[t["@value"].label]="string"==typeof i?i:i["@value"],n}convert_vertex_to_json(e){if("g:Vertex"!==e["@type"])throw"Not a vertex error. check if this is of g:Vertex type:: "+JSON.stringify(e);let t={type:"g:Vertex"},n=this;t.id=e["@value"].id["@value"],t.label=e["@value"].label;let i=e["@value"].properties;return i&&Object.keys(i).forEach((function(e){let r=i[e],s=n.convert_vertex_property_to_json(r);t[e]=s[e]})),t}convert_edge_property_to_json(e){let t=e;if("g:Property"!==t["@type"])throw"Not a g:Property error. check if this is of g:Property type:: "+JSON.stringify(e);let n={},i=t["@value"].value;return n[t["@value"].key]="string"==typeof i?i:i["@value"],n}convert_edge_to_json(e){if("g:Edge"!==e["@type"])throw"Not a edge error. check if this is of g:Edge type:: "+JSON.stringify(e);let t=this,n={type:"g:Edge"};n.label=e["@value"].label,n.id=e["@value"].id["@value"].relationId,n.inV=e["@value"].inV["@value"],n.inVLabel=e["@value"].inVLabel,n.outV=e["@value"].outV["@value"],n.outVLabel=e["@value"].outVLabel;let i=e["@value"].properties;return i&&Object.keys(i).forEach((function(e){let r=i[e],s=t.convert_edge_property_to_json(r);n[e]=s[e]})),n}convert_set_to_json(e){if(e&&"@type"in e&&"g:Set"!==e["@type"])throw"Not a g:Set error. check if this is of g:Set type:: "+JSON.stringify(e);return e&&"@value"in e&&e["@value"].forEach((function(e){})),[]}convert_list_to_json(e){if(e&&"@type"in e&&"g:List"!==e["@type"])throw"Not a List error. check if this is of g:List type:: "+JSON.stringify(e);let t=this,n=[];return e&&"@value"in e&&e["@value"].forEach((function(e){t.process_item(e).forEach((function(e){n.push(e)}))})),n}convert_bulkset_to_json(e){if(e&&"@type"in e&&"g:BulkSet"!==e["@type"])throw"Not a g:BulkSet error. check if this is of g:BulkSet type:: "+JSON.stringify(e);let t=this,n=[];return e&&"@value"in e&&e["@value"].forEach((function(e){t.process_item(e).forEach((function(e){n.push(e)}))})),n}convert_map_to_json(e){if(e&&"@type"in e&&"g:Map"!==e["@type"])throw"Not a g:Map error. check if this is of g:Map type:: "+JSON.stringify(e);let t=this,n=[];return e&&"@value"in e&&e["@value"].forEach((function(e){t.process_item(e).forEach((function(e){n.push(e)}))})),n}convert_path_to_json(e){if(e&&"@type"in e&&"g:Path"!==e["@type"])throw"Not a g:Path error. check if this is of g:Path type:: "+JSON.stringify(e);let t=this,n=[];return e&&"@value"in e&&("objects"in e["@value"]?e["@value"].objects["@value"].forEach((function(e){t.process_item(e).forEach((function(e){n.push(e)}))})):"labels"in e["@value"]&&e["@value"].labels["@value"].forEach((function(e){t.process_item(e).forEach((function(e){n.push(e)}))}))),n}process_item(e){let t=this;if(e&&"object"==typeof e&&"@type"in e){if("g:Vertex"===e["@type"]){return[t.convert_vertex_to_json(e)]}if("g:Edge"===e["@type"]){return[t.convert_edge_to_json(e)]}return"g:List"===e["@type"]?t.convert_list_to_json(e):"g:Path"===e["@type"]?t.convert_path_to_json(e):"g:Set"===e["@type"]?t.convert_set_to_json(e):"g:BulkSet"===e["@type"]?t.convert_bulkset_to_json(e):"g:Map"===e["@type"]?t.convert_map_to_json(e):[]}return[]}process(e){e.request_id;let t=e.result.data;return this.convert_list_to_json(t)}seperate_vertices_and_edges(e){let t=[],n=[];return e&&e.forEach((function(e){"g:Vertex"===e.type?t.push(e):"g:Edge"===e.type&&(e.source=e.inV,e.target=e.outV,n.push(e))})),[t,n]}}class GremlinConnector{setup_gremlin_server_socket(e,t){let n=this,i=new WebSocket(e);return show_notification("Connecting to gremlin server url :"+e),i.onopen=function(e){show_notification("Connected to Server"),$("#connection-status span").removeClass().addClass("server-connected").html("Connected Successfully").attr("title","Connected")},i.onmessage=function(e){show_notification("Message Received"),t(e)},i.onerror=function(e){show_notification("Something went wrong"),$("#connection-status span").removeClass().addClass("server-not-connected").html("Connection closed").attr("title","Unable to Connect")},i.onclose=function(i){show_notification("Connection Closed"),$("#connection-status span").removeClass().addClass("server-not-connected").html("Connection closed").attr("title","Connection Closed");let r=1,s=setInterval(function(){show_notification("Connection Attempt Failed. Waited "+r+"s of 10s 'retry in' time..."),r+=1,r>10&&(clearInterval(s),n.ws=n.setup_gremlin_server_socket(e,t))}.bind(this),1e3)},i}constructor(e,t){this.ws=this.setup_gremlin_server_socket(e,t)}send(e){this.ws.send(JSON.stringify(e),{mask:!0})}}class InvanaKnowledgeGraphUI{constructor(e,t){this.GREMLIN_SERVER_URL=e,this.html_selector_id=t,this.canvas_selector_id="#graph-area",this.gremlinConnector=null,this.init_html(),this.graph_canvas=new DataGraphCanvas(this.canvas_selector_id,this)}init_html(){$(this.html_selector_id).html($('<div class="invana-graph-viewer">\n    <div class="page-loading" style="display: none">\n        <div class="loader-spin"></div>\n        <p class="text-center">Loading ...</p>\n    </div>\n    <nav class="invana-graph-viewer-nav">\n        <div class="invana-graph-viewer-query">\n            <form id="header-query-form">\n                <input name="query" type="text" placeholder="Query the Graph here. Example: g.V().limit(5).toList()">\n            </form>\n        </div>\n\n    </nav>\n    <section class="canvas-section">\n        <div id="graph-area-wrapper" class="full-screen">\n            <svg id="graph-area" width="100%" height="100%">\n            </svg>\n        </div>\n    </section>\n    <div id="legend-div">\n        <svg></svg>\n    </div>\n    <pre id="properties-div"></pre>\n    <div id="controls-div">\n    </div>\n    <div id="notifications-div"></div>\n    <div id="connection-status"><span></span></div>\n    <div id="copy-right-info-div">Invana Graph UI</div>\n</div>'))}addQueryToUrl(e){let t=new URL(location.href);var n=new URLSearchParams(window.location.search);n.set("query",e),window.history.replaceState&&window.history.pushState({},null,t.origin+t.pathname+"?"+n.toString())}submitQuery(e,t,n,i){let r=this;if(void 0===n&&(n=!0),void 0===i&&(i=!1),i&&this.graph_canvas.reset_canvas_data(),t&&!e)alert("Query cannot be Blank");else if(e){let t={requestId:uuidv4(),op:"eval",processor:"",args:{gremlin:e,bindings:{},language:"gremlin-groovy"}};show_loading(),!0===n&&(r.addQueryToUrl(e),$('[name="query"]').val(e)),r.gremlinConnector.send(t)}}onPageLoadInitQuery(){let e=new URLSearchParams(window.location.search).get("query");this.submitQuery(e,!1,!0)}onHeaderQuerySubmit(e,t){t.preventDefault();let n=$('#header-query-form [name="query"]').val();e.submitQuery(n,!1,!0,!0)}start(){let e=this,t=new GremlinResponseSerializers;this.gremlinConnector=new GremlinConnector(this.GREMLIN_SERVER_URL,(function(n){let i=JSON.parse(n.data),r=t.process(i);show_notification("Rendered graph");let s=t.seperate_vertices_and_edges(r),o=s[0],a=s[1];e.graph_canvas.draw(o,a),hide_loading()})),$("#header-query-form").submit((function(t){e.onHeaderQuerySubmit(e,t)})),this.gremlinConnector.ws.addEventListener("open",(function(t){e.onPageLoadInitQuery()}))}}