[{"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/index.js":"1","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/reportWebVitals.js":"2","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/App.js":"3","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/config.js":"4","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/connect.js":"5","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/page-404.js":"6","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/schema.js":"7","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/switch-server.js":"8","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/settings.js":"9","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/index.js":"10","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/layout/default.js":"11","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/canvas.js":"12","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/menu.js":"13","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/sidebar.js":"14","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/utils.js":"15","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/data.js":"16","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/explorer.js":"17"},{"size":501,"mtime":1608407525977,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608290002870,"results":"20","hashOfConfig":"19"},{"size":1452,"mtime":1610531718298,"results":"21","hashOfConfig":"19"},{"size":801,"mtime":1609750554839,"results":"22","hashOfConfig":"19"},{"size":9984,"mtime":1610459795302,"results":"23","hashOfConfig":"19"},{"size":696,"mtime":1608395041954,"results":"24","hashOfConfig":"19"},{"size":268,"mtime":1608424641534,"results":"25","hashOfConfig":"19"},{"size":394,"mtime":1608394917828,"results":"26","hashOfConfig":"19"},{"size":272,"mtime":1608488926143,"results":"27","hashOfConfig":"19"},{"size":1872,"mtime":1609750987032,"results":"28","hashOfConfig":"19"},{"size":2511,"mtime":1610531876534,"results":"29","hashOfConfig":"19"},{"size":335,"mtime":1608419132577,"results":"30","hashOfConfig":"19"},{"size":710,"mtime":1608419459011,"results":"31","hashOfConfig":"19"},{"size":282,"mtime":1610538199777,"results":"32","hashOfConfig":"19"},{"size":551,"mtime":1608540361555,"results":"33","hashOfConfig":"19"},{"size":2825,"mtime":1610532931089,"results":"34","hashOfConfig":"19"},{"size":3727,"mtime":1610532903337,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1urfhgo",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/index.js",[],["73","74"],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/reportWebVitals.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/App.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/config.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/connect.js",["75","76"],"import React from 'react';\nimport DefaultLayout from \"../layout/default\";\nimport Card from \"react-bootstrap/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faAngleDown, faTimesCircle, faUserAstronaut} from \"@fortawesome/free-solid-svg-icons\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {VERSION, ABOUT_TEXT, GE_CONSTANTS} from \"../../config\";\nimport {setDataToLocalStorage} from \"../utils\";\nimport \"./connect.scss\";\n\nexport default class ConnectView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorMessage: null,\n            showExtraHeaderOptions: false,\n            extraHeadersCount: 1\n        }\n    }\n\n    addNewHeader() {\n        console.log(\"addNewHeader\")\n        this.setState({extraHeadersCount: this.state.extraHeadersCount + 1})\n    }\n\n    removeHeader() {\n        this.setState({extraHeadersCount: this.state.extraHeadersCount - 1})\n\n    }\n\n    checkIfSecureProtocol(url) {\n        const protocol = new URL(url).protocol;\n        return protocol === \"https:\" || protocol === \"wss:\";\n    }\n\n    getErrorFromUrlString() {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get('error');\n    }\n\n    getHeaders() {\n\n        let headers = {};\n        document.querySelectorAll(\".headerItem\").forEach((elem) => {\n            const key = elem.querySelector(\".headerKey\").value;\n            const val = elem.querySelector(\".headerValue\").value;\n            console.log(\"======\", key, val);\n            headers[key] = val;\n        })\n        return headers;\n    }\n\n    validateConnectionUrl(connectionUrl){\n\n    }\n\n    onFormSubmit(e) {\n\n        console.log(\"onFormSubmit\", e);\n        const connectionUrl = e.target.connectionUrl.value;\n        const graphEngineName = e.target.graphEngineName.value;\n        // const isHttps = new URL(window.location.href).protocol === \"https:\" || new URL(window.location.href).protocol === \"wss:\";\n        e.preventDefault();\n\n        if (!connectionUrl) {\n            alert(\"Invalid connection string\");\n        } else if (this.checkIfSecureProtocol(window.location.href) && !this.checkIfSecureProtocol(connectionUrl)) {\n            alert(\"Your connection string is not secure. You can only use https or wss connection string \" +\n                \"when you are using Graph Explorer via https connection.\")\n        } else if (connectionUrl) {\n            const headers = this.getHeaders();\n            setDataToLocalStorage(GE_CONSTANTS.connectionUrlKey, connectionUrl);\n            setDataToLocalStorage(GE_CONSTANTS.httpHeadersKey, headers);\n            setDataToLocalStorage(GE_CONSTANTS.graphEngineName, graphEngineName);\n            window.location.href = \"/\";\n        }\n    }\n\n    componentDidMount() {\n\n        // document.addEventListener('input', (e) => {\n        //\n        //     if (e.target.getAttribute('name') === \"graphEngineName\")\n        //         console.log(e.target.value)\n        // })\n\n        function updateInputPlaceholder(event) {\n            console.log(\"event\", event.target.id);\n            const el = document.querySelector(\"[name=connectionUrl]\");\n            if (event.target.id === \"gremlinEngine\") {\n                el.placeholder = \"http://localhost:8182/gremlin\";\n            } else {\n                el.placeholder = \"http://localhost:8000/graphql\";\n            }\n        }\n\n        document.querySelectorAll(\"input[name='graphEngineName']\").forEach((input) => {\n            input.addEventListener('change', updateInputPlaceholder);\n        });\n\n        const errorMessage = this.getErrorFromUrlString();\n        this.setErrorMessage(errorMessage);\n\n    }\n\n    setErrorMessage(errorMessage) {\n        this.setState({errorMessage});\n    }\n\n    toggleMoreOptions() {\n\n        // const errorMessage = \"To provide custom headers, \" +\n        //     \"you need to provide connection string\" +\n        //     \" with http(s) protocol.\";\n        // const connectionUrl = document.querySelector('[name=\"connectionUrl\"]').value;\n        // if (!connectionUrl) {\n        //     alert(errorMessage);\n        //     return\n        // }\n        // const isHttp = new URL(connectionUrl).protocol.includes(\"http\");\n        // if (isHttp) {\n        this.setState({showExtraHeaderOptions: !this.state.showExtraHeaderOptions})\n        // } else {\n        //     alert(errorMessage);\n        // }\n\n    }\n\n    render() {\n\n        const headersArrayTemp = Array.from({length: this.state.extraHeadersCount}, (_, index) => index + 1);\n\n        // console.log(\"this.props.location\", this.props.location)\n        return (<DefaultLayout {...this.props}>\n\n\n            <Row className={\"pl-3\"} style={{paddingTop: \"12rem\"}}>\n                <Col md={\"1\"} className={\"mt-2 pl-3\"} style={{\"width\": \"4.5rem\", \"flex\": \"none\"}}>\n                    <FontAwesomeIcon icon={faUserAstronaut}\n                                     className={\"mt-2\"}\n                                     style={{\"fontSize\": \"4rem\"}}/>\n                </Col>\n                <Col md={\"5\"}>\n                    {/*<p className={\"mb-0 font-weight-bold\"}>INVANA</p>*/}\n                    <h1 className={\"pb-0 mb-0\"}>Invana Studio <small>({VERSION})</small></h1>\n                    <p>{ABOUT_TEXT}</p>\n                </Col>\n            </Row>\n\n\n            <Row className={\"pl-3\"}>\n                <Col md={\"6\"}>\n                    <Card style={{marginTop: '1rem', width: \"450px\"}} className=\"mb-2\">\n                        <Card.Header>Connect to Invana Engine</Card.Header>\n                        <Card.Body>\n                            <Form inline onSubmit={this.onFormSubmit.bind(this)}>\n\n                                <Form.Control\n                                    className=\"mb-2 mr-sm-2\"\n                                    name=\"connectionUrl\"\n                                    placeholder=\"http://localhost:8000/graphql\"\n                                    style={{width: \"320px\"}}\n                                />\n                                <Form.Control\n                                    name=\"graphEngineName\"\n                                    placeholder=\"http://localhost:8000/graphql\"\n                                    type={\"hidden\"}\n                                />\n\n\n                                <Button type=\"submit\" className=\"mb-2\">\n                                    Connect\n                                </Button>\n                                <p>\n                                    <button className={\"extra-headers-btn small\"} type={\"button\"}\n                                            onClick={this.toggleMoreOptions.bind(this)}>\n                                        http headers <FontAwesomeIcon icon={faAngleDown}/>\n                                    </button>\n                                </p>\n                                {\n                                    this.state.showExtraHeaderOptions\n                                        ?\n                                        <div className={\"headersList\"}>\n\n                                            <h6 className={\"small font-weight-bold\"}>Extra HTTP Headers</h6>\n                                            {\n                                                headersArrayTemp.map((headerItem) => {\n                                                    return <div key={headerItem}\n                                                                className={\"headerItem headerItem-\" + headerItem}>\n                                                        <input type=\"text\"\n                                                               className={\"headerKey\"}\n                                                               placeholder={\"header key\"}\n                                                               name={\"headerKey\"}\n                                                        />\n                                                        <input type=\"text\"\n                                                               className={\"headerValue\"}\n                                                               placeholder={\"header value\"}\n                                                               name={\"headerValue\"}\n                                                        />\n                                                        <button type={\"button\"}\n                                                                onClick={this.removeHeader.bind(this)}>\n                                                            <FontAwesomeIcon icon={faTimesCircle}/>\n                                                        </button>\n\n                                                    </div>\n\n                                                })\n                                            }\n\n                                            <p>\n                                                <button type={\"button\"} className={\"\"}\n                                                        onClick={this.addNewHeader.bind(this)}> +\n                                                    add\n                                                    new header\n                                                </button>\n                                            </p>\n                                        </div>\n                                        : <span></span>\n\n                                }\n\n                            </Form>\n                            <p>\n                                <a href=\"\">Setup Instructions</a> | <a href=\"\">Watch demo</a>\n                            </p>\n                            {\n                                this.state.errorMessage ? (\n                                    <p>{this.state.setErrorMessage}</p>\n                                ) :  (<span></span>)\n                            }\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n        </DefaultLayout>)\n    }\n}\n","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/page-404.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/schema.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/switch-server.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/settings.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/index.js",["77"],"import React from \"react\";\n\n// import RemoteGraphComponent from \"../core/graph-component\";\n// import GraphSONDeSerializer from \"../serializers/graphson-v3\";\n// import {managementVertexLabel} from \"../config\";\nimport {\n    managementVertexLabel\n} from \"../../config\";\n// import {setElementColorOptionsToStorageUsingResponse} from \"../core/utils\";\n\nexport default class IndexView extends React.Component {\n\n\n    componentDidMount() {\n        // super.componentDidMount();\n        // let _this = this;\n        // console.log(\"=_this.connector.requestBuilder.initQuery()\", _this.connector.requestBuilder.initQuery())\n        // setTimeout(function () {\n        //     _this.makeQuery(_this.connector.requestBuilder.filterVertices(\n        //         managementVertexLabel, 50\n        //     ), {source: \"internal\"});\n        // }, 200)\n        window.location.href = \"/connect\";\n    }\n\n    processResponse(response) {\n        let _this = this;\n        // let response = this.connector.getLastResponse();\n        console.log(\"processResponse received\", response);\n        // const statusCode = response.getStatusCode();\n        const transporterStatusCode = response.transporterStatusCode;\n        if (transporterStatusCode >= 200 && transporterStatusCode < 300) {\n            // setElementColorOptionsToStorageUsingResponse(response);\n            window.location.href = \"/explorer\";\n        } else {\n            window.location.href = \"/connect?error=Failed to connect&transporterStatus=\" + transporterStatusCode;\n            _this.setState({\n                \"errorMessage\": JSON.stringify(response,),\n                \"showErrorMessage\": true,\n                \"statusMessage\": \"Query Successfully Responded.\" +\n                    \" But returned non 200 status[\" + response.status.code + \"]\"\n            })\n        }\n    }\n\n    render() {\n        return(<div></div>)\n    }\n\n}\n","/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/layout/default.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/canvas.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/menu.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/ui-components/sidebar.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/utils.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/data.js",[],"/Users/rrmerugu/Projects/invanalabs/graph-explorer-redesign/src/web/views/explorer.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":225,"column":33,"nodeType":"84","endLine":225,"endColumn":44},{"ruleId":"82","severity":1,"message":"83","line":225,"column":69,"nodeType":"84","endLine":225,"endColumn":80},{"ruleId":"85","severity":1,"message":"86","line":7,"column":5,"nodeType":"87","messageId":"88","endLine":7,"endColumn":26},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'managementVertexLabel' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]